{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebPlugin } from '@capacitor/core';\r\n\r\nimport type { SensorsPlugin, SensorOptions, WebPermissionStatus } from './definitions';\r\nimport { SensorDelay, SensorType, SensorResult, SensorData } from './definitions';\r\n\r\nconst webSupportedSensors: Record<string, SensorType> = {\r\n  AbsoluteOrientationSensor: SensorType.ABSOLUTE_ORIENTATION,\r\n  Accelerometer: SensorType.ACCELEROMETER,\r\n  AmbientLightSensor: SensorType.AMBIENT_LIGHT,\r\n  GravitySensor: SensorType.GRAVITY,\r\n  Gyroscope: SensorType.GYROSCOPE,\r\n  LinearAccelerationSensor: SensorType.LINEAR_ACCELERATION,\r\n  Magnetometer: SensorType.MAGNETOMETER,\r\n  RelativeOrientationSensor: SensorType.RELATIVE_ORIENTATION,\r\n  ondevicemotion: SensorType.MOTION_DETECTOR,\r\n};\r\n\r\nconst webSensorFrequency: Record<SensorDelay, number> = {\r\n  [SensorDelay.FASTEST]: 0,\r\n  [SensorDelay.GAME]: 15,\r\n  [SensorDelay.UI]: 30,\r\n  [SensorDelay.NORMAL]: 60,\r\n};\r\n\r\nconst webNeededPerms: Record<number, (keyof WebPermissionStatus)[]> = {\r\n  [SensorType.ABSOLUTE_ORIENTATION]: ['accelerometer', 'gyroscope', 'magnetometer'],\r\n  [SensorType.ACCELEROMETER]: ['accelerometer'],\r\n  [SensorType.AMBIENT_LIGHT]: ['ambient-light-sensor'],\r\n  [SensorType.GRAVITY]: ['accelerometer'],\r\n  [SensorType.GYROSCOPE]: ['gyroscope'],\r\n  [SensorType.LINEAR_ACCELERATION]: ['accelerometer'],\r\n  [SensorType.MAGNETOMETER]: ['magnetometer'],\r\n  [SensorType.RELATIVE_ORIENTATION]: ['accelerometer', 'gyroscope'],\r\n};\r\n\r\nconst getWindowProperty = (type: SensorType) =>\r\n  Object.keys(webSupportedSensors).find((key) => webSupportedSensors[key] === type);\r\n\r\nclass WebSensor implements SensorData {\r\n  private sensor!: Sensor;\r\n\r\n  constructor(\r\n    public type: SensorType,\r\n    public notify: (eventName: string, data: any) => void,\r\n    public delay: SensorDelay = SensorDelay.NORMAL,\r\n  ) {\r\n    const windowKey = getWindowProperty(type) ?? '';\r\n    this.sensor = new (window as any)[windowKey]({ frequency: webSensorFrequency[delay] });\r\n  }\r\n\r\n  start(): void {\r\n    this.sensor.addEventListener('reading', () => {\r\n      const values: number[] = [];\r\n      if ('illuminance' in this.sensor) values.push(this.sensor.illuminance as number);\r\n      if ('quaternion' in this.sensor) values.push(...(this.sensor.quaternion as number[]));\r\n      if ('x' in this.sensor) values.push(this.sensor.x as number);\r\n      if ('y' in this.sensor) values.push(this.sensor.y as number);\r\n      if ('z' in this.sensor) values.push(this.sensor.z as number);\r\n\r\n      const result = {\r\n        accuracy: -1,\r\n        timestamp: this.sensor.timestamp ?? -1,\r\n        values,\r\n      } satisfies SensorResult;\r\n\r\n      this.notify(SensorType[this.type], result);\r\n    });\r\n    this.sensor.start();\r\n  }\r\n\r\n  stop(): void {\r\n    this.sensor.removeEventListener('reading', null);\r\n    this.sensor.stop();\r\n  }\r\n}\r\n\r\nexport class SensorsWeb extends WebPlugin implements SensorsPlugin {\r\n  async requestPermissions(sensor: SensorData): Promise<WebPermissionStatus> {\r\n    if (typeof navigator === 'undefined' || !navigator.permissions) {\r\n      this.unavailable('Permissions API not available in this browser.');\r\n    }\r\n    const permission = await Promise.all(\r\n      webNeededPerms[sensor.type].map((p) => navigator.permissions.query({ name: p as PermissionName })),\r\n    );\r\n    return permission.reduce((p, c) => {\r\n      return {\r\n        ...p,\r\n        [c.name]: c.state,\r\n      };\r\n    }, {} as WebPermissionStatus);\r\n  }\r\n\r\n  async start(sensor: WebSensor): Promise<void> {\r\n    if (sensor.type == SensorType.MOTION_DETECTOR) {\r\n      window.ondevicemotion = () => {\r\n        this.notifyListeners(SensorType[sensor.type], [1]);\r\n      };\r\n    } else sensor.start();\r\n  }\r\n\r\n  async stop(sensor: WebSensor): Promise<void> {\r\n    sensor.stop();\r\n  }\r\n\r\n  async init({ type, delay }: SensorOptions): Promise<SensorData | undefined> {\r\n    if (this.isPresent(type)) {\r\n      if (type == SensorType.MOTION_DETECTOR) {\r\n        const sensor = { type } satisfies SensorData;\r\n        return sensor;\r\n      } else {\r\n        const sensor = new WebSensor(type, this.notifyListeners, delay);\r\n        return sensor;\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async getAvailableSensors(): Promise<{ sensors: SensorType[] }> {\r\n    const sensorsList = Object.entries(webSupportedSensors)\r\n      .filter(([sensorName]) => sensorName in window)\r\n      .map(([, sensorType]) => sensorType);\r\n    return {\r\n      sensors: sensorsList,\r\n    };\r\n  }\r\n\r\n  private isPresent(type: SensorType) {\r\n    if (type in SensorType) {\r\n      const windowKey = getWindowProperty(type);\r\n      if (windowKey) return windowKey in window;\r\n      return false;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n"]}